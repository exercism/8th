
    test "no matches" [
        result: anagrams "diaper" ["hello", "world", "zombies", "pants"]
        assert -> [] = result
    ]?


    test "detects two anagrams" [
        result: anagrams "solemn" ["lemons", "cherry", "melons"]
        assert -> ["lemons", "melons"] = result
    ]?

    test "does not detect anagram subsets" [
        result: anagrams "good" ["dog", "goody"]
        assert -> [] = result
    ]?

    test "detects anagram" [
        result: anagrams "listen" ["enlists", "google", "inlets", "banana"]
        assert -> ["inlets"] = result
    ]?

    test "detects three anagrams" [
        result: anagrams "allergy" ["gallery", "ballerina", "regally", "clergy", "largely", "leading"]
        assert -> ["gallery", "regally", "largely"] = result
    ]?

    test "detects multiple anagrams with different case" [
        result: anagrams "nose" ["Eons", "ONES"]
        assert -> ["Eons", "ONES"] = result
    ]?

    test "does not detect non-anagrams with identical checksum" [
        result: anagrams "mass" ["last"]
        assert -> [] = result
    ]?

    test "detects anagrams case-insensitively" [
        result: anagrams "Orchestra" ["cashregister", "Carthorse", "radishes"]
        assert -> ["Carthorse"] = result
    ]?

    test "detects anagrams using case-insensitive subject" [
        result: anagrams "Orchestra" ["cashregister", "carthorse", "radishes"]
        assert -> ["carthorse"] = result
    ]?

    test "detects anagrams using case-insensitive possible matches" [
        result: anagrams "orchestra" ["cashregister", "Carthorse", "radishes"]
        assert -> ["Carthorse"] = result
    ]?

    test "does not detect an anagram if the original word is repeated" [
        result: anagrams "go" ["goGoGO"]
        assert -> [] = result
    ]?

    test "anagrams must use all letters exactly once" [
        result: anagrams "tapper" ["patter"]
        assert -> [] = result
    ]?

    test "words are not anagrams of themselves" [
        result: anagrams "BANANA" ["BANANA"]
        assert -> [] = result
    ]?

    test "words are not anagrams of themselves even if letter case is partially different" [
        result: anagrams "BANANA" ["Banana"]
        assert -> [] = result
    ]?

    test "words are not anagrams of themselves even if letter case is completely different" [
        result: anagrams "BANANA" ["banana"]
        assert -> [] = result
    ]?

    test "words other than themselves can be anagrams" [
        result: anagrams "LISTEN" ["LISTEN", "Silent"]
        assert -> ["Silent"] = result
    ]?


