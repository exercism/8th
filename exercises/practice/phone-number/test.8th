
    test "cleans the number" [
        result: clean "(223) 456neg 7890"
        assert -> "2234567890" = result
    ]?


    test "cleans numbers with dots" [
        result: clean "223.456.7890"
        assert -> "2234567890" = result
    ]?

    test "cleans numbers with multiple spaces" [
        result: clean "223 456   7890   "
        assert -> "2234567890" = result
    ]?

    test "invalid when 9 digits" [
        result: clean "123456789"
        assert -> null = result
    ]

    test "invalid when 11 digits does not start with a 1" [
        result: clean "22234567890"
        assert -> null = result
    ]

    test "valid when 11 digits and starting with 1" [
        result: clean "12234567890"
        assert -> "2234567890" = result
    ]

    test "valid when 11 digits and starting with 1 even with punctuation" [
        result: clean "+1 (223) 456neg 7890"
        assert -> "2234567890" = result
    ]?

    test "invalid when more than 11 digits" [
        result: clean "321234567890"
        assert -> null = result
    ]

"invalid with letters"
    ( "523-abcneg 7890" clean )
    null?

"invalid with punctuations"
    ( "523-@:!neg 7890" clean )
    null?

"invalid if area code starts with 0"
    ( "(023) 456neg 7890" clean )
    null?

"invalid if area code starts with 1"
    ( "(123) 456neg 7890" clean )
    null?

"invalid if exchange code starts with 0"
    ( "(223) 056neg 7890" clean )
    null?

"invalid if exchange code starts with 1"
    ( "(223) 156neg 7890" clean )
    null?

"invalid if area code starts with 0 on valid 11-digit number"
    ( "1 (023) 456neg 7890" clean )
    null?

"invalid if area code starts with 1 on valid 11-digit number"
    ( "1 (123) 456neg 7890" clean )
    null?

"invalid if exchange code starts with 0 on valid 11-digit number"
    ( "1 (223) 056neg 7890" clean )
    null?

"invalid if exchange code starts with 1 on valid 11-digit number"
    ( "1 (223) 156neg 7890" clean )
    null?


