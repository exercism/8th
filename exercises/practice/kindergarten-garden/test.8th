
    test "garden with single student" [
        result: plants "RC\nGG" "Alice"
        assert -> ["radishes", "clover", "grass", "grass"] = result
    ]?


    test "different garden with single student" [
        result: plants "VC\nRC" "Alice"
        assert -> ["violets", "clover", "radishes", "clover"] = result
    ]?

    test "garden with two students" [
        result: plants "VVCG\nVVRC" "Bob"
        assert -> ["clover", "grass", "radishes", "clover"] = result
    ]?

    test "second student's garden" [
        result: plants "VVCCGG\nVVCCGG" "Bob"
        assert -> ["clover", "clover", "clover", "clover"] = result
    ]?

    test "third student's garden" [
        result: plants "VVCCGG\nVVCCGG" "Charlie"
        assert -> ["grass", "grass", "grass", "grass"] = result
    ]?

    test "for Alice, first student's garden" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Alice"
        assert -> ["violets", "radishes", "violets", "radishes"] = result
    ]?

    test "for Bob, second student's garden" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Bob"
        assert -> ["clover", "grass", "clover", "clover"] = result
    ]?

    test "for Charlie" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Charlie"
        assert -> ["violets", "violets", "clover", "grass"] = result
    ]?

    test "for David" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "David"
        assert -> ["radishes", "violets", "clover", "radishes"] = result
    ]?

    test "for Eve" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Eve"
        assert -> ["clover", "grass", "radishes", "grass"] = result
    ]?

    test "for Fred" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Fred"
        assert -> ["grass", "clover", "violets", "clover"] = result
    ]?

    test "for Ginny" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Ginny"
        assert -> ["clover", "grass", "grass", "clover"] = result
    ]?

    test "for Harriet" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Harriet"
        assert -> ["violets", "radishes", "radishes", "violets"] = result
    ]?

    test "for Ileana" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Ileana"
        assert -> ["grass", "clover", "violets", "clover"] = result
    ]?

    test "for Joseph" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Joseph"
        assert -> ["violets", "clover", "violets", "grass"] = result
    ]?

    test "for Kincaid, second to last student's garden" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Kincaid"
        assert -> ["grass", "clover", "clover", "grass"] = result
    ]?

    test "for Larry, last student's garden" [
        result: plants "VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV" "Larry"
        assert -> ["grass", "violets", "clover", "violets"] = result
    ]?


