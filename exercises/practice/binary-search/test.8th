import {unitt}!
import {src/binary-search}!

suite "Binary Search" [
    test "finds a value in an array with one element" [
        result: find [6] 6
        assert -> 0 = result
    ]

    test.skip "finds a value in the middle of an array" [
        result: find [1, 3, 4, 6, 8, 9, 11] 6
        assert -> 3 = result
    ]

    test.skip "finds a value at the beginning of an array" [
        result: find [1, 3, 4, 6, 8, 9, 11] 1
        assert -> 0 = result
    ]

    test.skip "finds a value at the end of an array" [
        result: find [1, 3, 4, 6, 8, 9, 11] 11
        assert -> 6 = result
    ]

    test.skip "finds a value in an array of odd length" [
        result: find [1, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 634] 144
        assert -> 9 = result
    ]

    test.skip "finds a value in an array of even length" [
        result: find [1, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] 21
        assert -> 5 = result
    ]

    test.skip "identifies that a value is not included in the array" [
        result: find [1, 3, 4, 6, 8, 9, 11] 7
        assert -> null = result
    ]

    test.skip "a value smaller than the array's smallest value is not found" [
        result: find [1, 3, 4, 6, 8, 9, 11] 0
        assert -> null = result
    ]

    test.skip "a value larger than the array's largest value is not found" [
        result: find [1, 3, 4, 6, 8, 9, 11] 13
        assert -> null = result
    ]

    test.skip "nothing is found in an empty array" [
        result: find [] 1
        assert -> null = result
    ]

    test.skip "nothing is found when the left and right bounds cross" [
        result: find [1, 2] 0
        assert -> null = result
    ]
]
